[{"/home/sp/Desktop/chart-test-app/src/index.js":"1","/home/sp/Desktop/chart-test-app/src/App.js":"2","/home/sp/Desktop/chart-test-app/src/reportWebVitals.js":"3","/home/sp/Desktop/chart-test-app/src/Chart.js":"4","/home/sp/Desktop/chart-test-app/src/data.js":"5","/home/sp/Desktop/dynamic_chart_app/src/index.js":"6","/home/sp/Desktop/dynamic_chart_app/src/App.js":"7","/home/sp/Desktop/dynamic_chart_app/src/reportWebVitals.js":"8","/home/sp/Desktop/dynamic_chart_app/src/Chart.js":"9","/home/sp/Desktop/dynamic_chart_app/src/data.js":"10"},{"size":500,"mtime":1641446764141,"results":"11","hashOfConfig":"12"},{"size":190,"mtime":1641448237117,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1641446764145,"results":"14","hashOfConfig":"12"},{"size":3051,"mtime":1641472542937,"results":"15","hashOfConfig":"12"},{"size":714153,"mtime":1641455070491,"results":"16","hashOfConfig":"12"},{"size":500,"mtime":1641446764141,"results":"17","hashOfConfig":"18"},{"size":190,"mtime":1641448237117,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1641446764145,"results":"20","hashOfConfig":"18"},{"size":3051,"mtime":1641472542937,"results":"21","hashOfConfig":"18"},{"size":714153,"mtime":1641455070491,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fi3cen",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11yd8lo",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sp/Desktop/chart-test-app/src/index.js",[],"/home/sp/Desktop/chart-test-app/src/App.js",["45"],"/home/sp/Desktop/chart-test-app/src/reportWebVitals.js",[],"/home/sp/Desktop/chart-test-app/src/Chart.js",["46","47"],"/home/sp/Desktop/chart-test-app/src/data.js",[],"/home/sp/Desktop/dynamic_chart_app/src/index.js",[],"/home/sp/Desktop/dynamic_chart_app/src/App.js",["48"],"import logo from './logo.svg';\nimport './App.css';\nimport Chart from './Chart';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Chart />\n    </div>\n  );\n}\n\nexport default App;\n","/home/sp/Desktop/dynamic_chart_app/src/reportWebVitals.js",[],"/home/sp/Desktop/dynamic_chart_app/src/Chart.js",["49","50"],"import React, { useState, useEffect } from \"react\";\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Tooltip,\n    Title,\n    Legend\n} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport { dataNew } from './data';\n\nChartJS.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend\n  );\n\nexport default function Chart() {\n    const [filterData, setFilterData] = useState(dataNew);\n    const [dateCounter,setDateCounter] = useState(1);\n    const slot =[\"1992-05-02\",\"1998-02-03\",\"2004-09-21\",\"2009-02-10\",\"2022-04-01\"];\n    const [timeOutVar ,setTimeOutVar] = useState(0);\n    \n    const dataSlicer=(counter,dataSlot,data)=>{\n        let startDate = new Date(dataSlot[0]).getTime();\n        let endDate = new Date(dataSlot[counter]).getTime();\n\n        if(startDate && endDate){\n            let findData = data.filter((item)=>{\n                let itemDate = new Date(item.Date).getTime();\n                if(itemDate >= startDate && itemDate <= endDate){\n                    return true;\n                }else{\n                    return false;\n                }\n            })            \n            return findData;\n        }else{\n            return [];\n        }\n    }\n\n    const [newData, setNewData] = useState(dataSlicer(dateCounter,slot,filterData));\n    function dataFilterTimeout(){\n        let localCounter = dateCounter+1;\n        setTimeOutVar(setInterval(() => { \n            let data = dataSlicer(localCounter,slot,filterData); \n            let filteredData = data.length?data:newData;\n            console.log(\"filtered\",filteredData);\n            setNewData(filteredData);\n            setDateCounter(localCounter++);\n        }, 900000));\n      }\n\n    useEffect(()=>{\n        if(dateCounter >= slot.length-1 && timeOutVar){\n            clearInterval(timeOutVar);\n        }\n        if (dateCounter === 1){\n            dataFilterTimeout();\n        }    \n    },[dateCounter]);\n\n    const options = {\n        responsive: true,\n        plugins: {\n          legend: {\n          },\n          title: {\n            display: true,\n            text: \"Chart.js Line Chart\"\n          }\n        }\n      };\n      const labels = newData.map((data) => {\n        return data.Date;\n      });\n      \n       const data = {\n        labels,\n        datasets: [\n          {\n            label: \"Volume\",\n            data: newData.map((data) => {\n              return data.Volume;\n            }),\n            borderColor: \"rgb(255, 99, 132)\",\n            backgroundColor: \"rgba(255, 99, 132, 0.5)\"\n          },\n          {\n            label: \"Adj Close\",\n            data: newData.map((data) => {\n              return data[\"Adj Close\"];\n            }),\n            borderColor: 'rgba(54, 162, 235, 1)',\n            backgroundColor: 'rgba(54, 162, 235, 1)',\n          }\n        ],\n      };\n\n      return (<>\n      <h2>Date Span From {slot[0]} To {slot[dateCounter]}</h2>\n      <Line options={options} data={data} />\n       \n      </>);\n\n}","/home/sp/Desktop/dynamic_chart_app/src/data.js",[],{"ruleId":"51","severity":1,"message":"52","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":12},{"ruleId":"51","severity":1,"message":"55","line":26,"column":24,"nodeType":"53","messageId":"54","endLine":26,"endColumn":37},{"ruleId":"56","severity":1,"message":"57","line":69,"column":7,"nodeType":"58","endLine":69,"endColumn":20,"suggestions":"59"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":12},{"ruleId":"51","severity":1,"message":"55","line":26,"column":24,"nodeType":"53","messageId":"54","endLine":26,"endColumn":37},{"ruleId":"56","severity":1,"message":"57","line":69,"column":7,"nodeType":"58","endLine":69,"endColumn":20,"suggestions":"60"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setFilterData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dataFilterTimeout', 'slot.length', and 'timeOutVar'. Either include them or remove the dependency array.","ArrayExpression",["61"],["62"],{"desc":"63","fix":"64"},{"desc":"63","fix":"65"},"Update the dependencies array to be: [dataFilterTimeout, dateCounter, slot.length, timeOutVar]",{"range":"66","text":"67"},{"range":"68","text":"67"},[1998,2011],"[dataFilterTimeout, dateCounter, slot.length, timeOutVar]",[1998,2011]]